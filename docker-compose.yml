# mittaridatapumppu-endpoint

version: '3.8'

services:
  endpoint:
    image: ghcr.io/city-of-helsinki/mittaridatapumppu-endpoint
    build: .
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      DEVREG_ENDPOINTS_URL: "http://devreg:8000/api/v1/hosts/localhost/"
      DEVREG_API_TOKEN: "abcdef1234567890abcdef1234567890abcdef12"
      # Kafka client config
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      # Debug config
      UVICORN_LOG_LEVEL: "debug"
      UVICORN_RELOAD: "true"
      DEBUG: 1
  kafka:
    image: bitnami/kafka:3.4
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      # Kafka KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      # Listeners
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
    healthcheck:
      interval: 10s
      retries: 3
      test: kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --create --if-not-exists && kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --describe
      timeout: 5s

volumes:
  kafka_data:
